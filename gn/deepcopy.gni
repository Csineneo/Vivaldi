template("deepcopy") {
  assert(defined(invoker.inputs))
  assert(defined(invoker.destination))
  assert(defined(invoker.basepath))
  forward_variables_from(invoker,
                         [
                           "destination",
                           "basepath",
                         ])
  deps_list = []
  file_list = []

  foreach(cur_source, invoker.inputs) {
    cur_source = get_path_info(cur_source, "abspath")
    relpath = get_path_info(rebase_path(cur_source, basepath), "dir")

    #print ("$cur_source $basepath $relpath")

    i = 0
    j = 0
    found = false
    foreach(list_entry, file_list) {
      if (list_entry[0] == relpath) {
        j = i
        found = true
      }
      i += 1
    }
    if (found) {
      file_list[j] += [ cur_source ]
    } else {
      file_list += [ [
            relpath,
            cur_source,
          ] ]
    }
  }

  i = 0
  foreach(list_entry, file_list) {
    i = i + 1
    name = "${target_name}_$i"
    deps_list += [ ":" + name ]
    relpath = list_entry[0]
    j = 0
    cur_sources = []
    foreach(cur_source, list_entry) {
      j += 1
      if (j > 1) {
        cur_sources += [ cur_source ]
      }
    }

    if (j > 0) {
      copy(name) {
        set_sources_assignment_filter([])
        sources = cur_sources
        outputs = [
          "$destination$relpath/{{source_file_part}}",
        ]
      }
    }
  }
  group(target_name) {
    deps = deps_list
  }
}
