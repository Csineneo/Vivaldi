import("//vivaldi/gn/config/version.gni")
import("//vivaldi/gn/config/product.gni")

import("//vivaldi/app/source_updates.gni")
import("//vivaldi/base/source_updates.gni")
import("//vivaldi/browser/source_updates.gni")
import("//vivaldi/components/source_updates.gni")
if (!is_android) {
  import("//vivaldi/extensions/source_updates.gni")
}
import("//vivaldi/extraparts/source_updates.gni")
import("//vivaldi/importer/source_updates.gni")
import("//vivaldi/installer/source_updates.gni")
import("//vivaldi/prefs/source_updates.gni")
import("//vivaldi/renderer/source_updates.gni")
import("//vivaldi/sync/source_updates.gni")
import("//vivaldi/testing/source_updates.gni")
import("//vivaldi/ui/source_updates.gni")
import("//vivaldi/vivapp/source_updates.gni")
import("//vivaldi/platform_media/source_updates.gni")

_targets = [
  "//chrome/common:version_header",
  "//components/version_info:generate_version_info",
]

if (is_linux && !is_component_build) {
  _targets += ["//chrome/installer/linux:save_build_info"]
}

if (is_win) {
  _targets += [
    "//chrome/app/version_assembly:chrome_exe_version_manifest",
    "//chrome/app/version_assembly:version_assembly_manifest",
  ]
}


foreach (_target, _targets) {
  update_template_instance(_target) {
    sources += [ vivaldi_version_path, lastchange_vivaldi_path, ]
    if (!defined(extra_args)) {
      extra_args = []
    }
    extra_args += [
      "-e",
      "VIVALDI_BUILD=$vivaldi_global_build_number",
      "--vivaldi",
    ]
  }
}

update_target("//components/sessions:shared") {
  sources += [
    "//vivaldi/components/sessions/vivaldi_session_service_commands.cc",
    "//vivaldi/components/sessions/vivaldi_session_service_commands.h",
  ]
}

if (is_win) {
  update_target("//rlz:rlz_lib") {
    sources -= [
        "lib/financial_ping.cc",
        "lib/rlz_lib.cc",
    ]
  }
}