# Copyright 2016 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/features.gni")
import("//build/config/ui.gni")
import("//testing/test.gni")
import("//ui/base/ui_features.gni")

assert(use_aura)
assert(enable_hidpi)

# This target contains window management code used by both mash and ash. It
# should not use aura::Window, but may use parts of aura client code that don't
# depend upon aura::Window directly or indirectly.
component("ash_wm_common") {
  sources = [
    "always_on_top_controller.cc",
    "always_on_top_controller.h",
    "background_animator.cc",
    "background_animator.h",
    "container_finder.cc",
    "container_finder.h",
    "default_state.cc",
    "default_state.h",
    "default_window_resizer.cc",
    "default_window_resizer.h",
    "dock/docked_window_layout_manager.cc",
    "dock/docked_window_layout_manager.h",
    "dock/docked_window_layout_manager_observer.h",
    "dock/docked_window_resizer.cc",
    "dock/docked_window_resizer.h",
    "drag_details.cc",
    "drag_details.h",
    "fullscreen_window_finder.cc",
    "fullscreen_window_finder.h",
    "panels/panel_layout_manager.cc",
    "panels/panel_layout_manager.h",
    "panels/panel_window_resizer.cc",
    "panels/panel_window_resizer.h",
    "root_window_finder.cc",
    "root_window_finder.h",
    "shelf/wm_shelf.h",
    "shelf/wm_shelf_constants.cc",
    "shelf/wm_shelf_constants.h",
    "shelf/wm_shelf_observer.h",
    "shelf/wm_shelf_types.h",
    "shelf/wm_shelf_util.cc",
    "shelf/wm_shelf_util.h",
    "switchable_windows.cc",
    "switchable_windows.h",
    "window_animation_types.h",
    "window_parenting_utils.cc",
    "window_parenting_utils.h",
    "window_positioner.cc",
    "window_positioner.h",
    "window_positioning_utils.cc",
    "window_positioning_utils.h",
    "window_resizer.cc",
    "window_resizer.h",
    "window_state.cc",
    "window_state.h",
    "window_state_delegate.cc",
    "window_state_delegate.h",
    "window_state_observer.h",
    "window_state_util.cc",
    "window_state_util.h",
    "wm_activation_observer.h",
    "wm_display_observer.h",
    "wm_event.cc",
    "wm_event.h",
    "wm_globals.cc",
    "wm_globals.h",
    "wm_layout_manager.h",
    "wm_lookup.cc",
    "wm_lookup.h",
    "wm_overview_mode_observer.h",
    "wm_root_window_controller.h",
    "wm_root_window_controller_observer.h",
    "wm_screen_util.cc",
    "wm_screen_util.h",
    "wm_snap_to_pixel_layout_manager.cc",
    "wm_snap_to_pixel_layout_manager.h",
    "wm_types.cc",
    "wm_types.h",
    "wm_user_metrics_action.h",
    "wm_window.h",
    "wm_window_observer.h",
    "wm_window_property.h",
    "wm_window_tracker.h",
    "workspace/magnetism_matcher.cc",
    "workspace/magnetism_matcher.h",
    "workspace/multi_window_resize_controller.cc",
    "workspace/multi_window_resize_controller.h",
    "workspace/phantom_window_controller.cc",
    "workspace/phantom_window_controller.h",
    "workspace/two_step_edge_cycler.cc",
    "workspace/two_step_edge_cycler.h",
    "workspace/workspace_layout_manager.cc",
    "workspace/workspace_layout_manager.h",
    "workspace/workspace_layout_manager_backdrop_delegate.h",
    "workspace/workspace_layout_manager_delegate.h",
    "workspace/workspace_types.h",
    "workspace/workspace_window_resizer.cc",
    "workspace/workspace_window_resizer.h",
  ]

  configs += [ "//build/config:precompiled_headers" ]

  defines = [ "ASH_WM_COMMON_IMPLEMENTATION" ]

  deps = [
    "//ash/wm/common/resources",
    "//base",
    "//skia",

    # TODO(sky): remove aura dependencies. Currently the usage is for
    # aura/client code, and not aura::Window, but it would be nice to remove
    # this entirely.
    "//ui/aura",
    "//ui/base",
    "//ui/compositor",
    "//ui/display",
    "//ui/events",
    "//ui/gfx",
    "//ui/gfx/geometry",
    "//ui/keyboard",
    "//ui/views",
    "//ui/wm",
  ]

  if (is_win) {
    # TODO(jschuh): crbug.com/167187 fix size_t to int truncations.
    configs += [ "//build/config/compiler:no_size_t_to_int_warning" ]
  }
}
