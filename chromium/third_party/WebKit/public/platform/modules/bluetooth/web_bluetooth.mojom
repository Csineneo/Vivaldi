// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module blink.mojom;

// Errors that can occur during Web Bluetooth execution, which are transformed
// to a DOMException in Source/modules/bluetooth/BluetoothError.cpp.
//
// These errors all produce constant message strings. If a particular message
// needs a dynamic component, we should add a separate enum so type-checking the
// IPC ensures the dynamic component is passed.
enum WebBluetoothError {
  SUCCESS,
  // AbortError:
  // InvalidModificationError:
  GATT_INVALID_ATTRIBUTE_LENGTH,
  // InvalidStateError:
  SERVICE_NO_LONGER_EXISTS,
  CHARACTERISTIC_NO_LONGER_EXISTS,
  // NetworkError:
  CONNECT_ALREADY_IN_PROGRESS,
  CONNECT_ATTRIBUTE_LENGTH_INVALID,
  CONNECT_AUTH_CANCELED,
  CONNECT_AUTH_FAILED,
  CONNECT_AUTH_REJECTED,
  CONNECT_AUTH_TIMEOUT,
  CONNECT_CONNECTION_CONGESTED,
  CONNECT_INSUFFICIENT_ENCRYPTION,
  CONNECT_OFFSET_INVALID,
  CONNECT_READ_NOT_PERMITTED,
  CONNECT_REQUEST_NOT_SUPPORTED,
  CONNECT_UNKNOWN_ERROR,
  CONNECT_UNKNOWN_FAILURE,
  CONNECT_UNSUPPORTED_DEVICE,
  CONNECT_WRITE_NOT_PERMITTED,
  DEVICE_NO_LONGER_IN_RANGE,
  GATT_NOT_PAIRED,
  GATT_OPERATION_IN_PROGRESS,
  UNTRANSLATED_CONNECT_ERROR_CODE,
  // NotFoundError:
  NO_BLUETOOTH_ADAPTER,
  CHOSEN_DEVICE_VANISHED,
  CHOOSER_CANCELLED,
  CHOOSER_NOT_SHOWN_API_GLOBALLY_DISABLED,
  CHOOSER_NOT_SHOWN_API_LOCALLY_DISABLED,
  CHOOSER_NOT_SHOWN_USER_DENIED_PERMISSION_TO_SCAN,
  SERVICE_NOT_FOUND,
  CHARACTERISTIC_NOT_FOUND,
  NO_CHARACTERISTICS_FOUND,
  // NotSupportedError:
  GATT_UNKNOWN_ERROR,
  GATT_UNKNOWN_FAILURE,
  GATT_NOT_PERMITTED,
  GATT_NOT_SUPPORTED,
  GATT_UNTRANSLATED_ERROR_CODE,
  // SecurityError:
  GATT_NOT_AUTHORIZED,
  BLACKLISTED_CHARACTERISTIC_UUID,
  BLACKLISTED_READ,
  BLACKLISTED_WRITE,
  NOT_ALLOWED_TO_ACCESS_SERVICE,
  REQUEST_DEVICE_WITH_BLACKLISTED_UUID,
  REQUEST_DEVICE_FROM_CROSS_ORIGIN_IFRAME,
  REQUEST_DEVICE_WITHOUT_FRAME,
  // SyntaxError:
  // TODO(ortuno): Remove once we no longer use IPC.
  ENUM_MAX_VALUE = REQUEST_DEVICE_WITHOUT_FRAME,
};

// TODO(ortuno): Define Bluetooth Service.
// https://crbug.com/508771

// Web Bluetooth Interface that Blink can use to perform
// Bluetooth GATT Operations on Bluetooth Devices.
interface WebBluetoothService {

  // Writes a value to the characteristic with
  // |characteristic_instance_id|. The callback is run with
  // WebBluetoothError::SUCCESS if the value was successfully
  // written.
  RemoteCharacteristicWriteValue(
    string characteristic_instance_id,
    array<uint8> value) => (WebBluetoothError error);

};
