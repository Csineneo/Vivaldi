# This file contains a list of Mojo gtest unit tests.
#
# This must be valid Python. It may use the |config| global that will be a
# mopy.config.Config object, and must set a |tests| global that will contain the
# list of tests to run.
#
# The entries in |tests| are dictionaries of the following form:
#   {
#     # Required URL for apptest.
#     'test': 'mojo:test_app_url',
#     # Optional display name (otherwise the entry for 'test' above is used).
#     'name': 'mojo:test_app_url (more details)',
#     # Optional test type. Valid values:
#     #   * 'gtest': (default)
#     #   * 'gtest_isolated': like 'gtest', but run with fixture isolation.
#     #                       i.e., each test in a fresh mojo_shell
#     'type': 'gtest',
#     # Optional arguments for the shell or test.
#     'args': ['--some-flag-for-the-shell', '--some-flag-for-the-test'],
#   }
#
# TODO(vtl|msw): Add a way of specifying data dependencies.

# WARNING: If you add a test make sure the gn target mojo_apptests depends upon
# it.
tests = [
  # TODO(msw|jam): Fix and enable the runner_apptests: http://crbug.com/479316
  #{
  #  'test': 'mojo:runner_apptests',
  #  'type': 'gtest_isolated',
  #},
]

# TODO(msw): Get these tests passing on Android too. http://crbug.com/486220
if config.target_os != config.OS_ANDROID:
  tests += [
    {
      'test': 'mojo:media_apptests',
      'type': 'gtest_isolated',
    },
    # TODO(media): these tests fail in debug, which has no bot-coverage.
    # http://crbug.com/587523
#    {
#      'test': 'mojo:media_pipeline_integration_apptests',
#      'type': 'gtest_isolated',
#    },
  ]
