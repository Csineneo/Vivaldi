// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module package_manager.mojom;

import "mojo/shell/public/interfaces/shell.mojom";

// Implemented exclusively for the Mojo Shell's use in resolving mojo:// URLs
// and reading static manifest information.
interface ShellResolver {
  // Resolves |mojo_url| to the following metadata:
  //
  // resolved_mojo_url
  //  another mojo: url of an application implementing mojo::ShellClientFactory
  //  that can handle connections to |mojo_url|.
  //
  // qualifier
  //  an additional piece of metadata that identifies what instance
  //  |resolved_mojo_url| should be run in. It's possible that
  //  |resolved_mojo_url| may provide several services that should be run as
  //  different instances.
  //
  // mojo_file_url
  //  a file URL to the application specified in |resolved_mojo_url|
  //  TODO(beng): what if |resolved_mojo_url| needs to be re-resolved??
  // 
  // filter
  //  the base CapabilityFilter within which an instance of |resolved_mojo_url|
  //  must be run for |mojo_url|.
  //
  // If |mojo_url| can't be resolved (i.e. not a mojo: or exe: scheme), then
  // the callback will be run with null |mojo_file_url|, and |filter|.
  ResolveMojoURL(string mojo_url) =>
      (string resolved_mojo_url,
       string qualifier,
       mojo.shell.mojom.CapabilityFilter? filter,
       string? mojo_file_url);
};
