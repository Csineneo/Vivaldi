@@include@@variables.include

APT_GET="`which apt-get 2> /dev/null`"
APT_CONFIG="`which apt-config 2> /dev/null`"

SOURCES_PREAMBLE="### THIS FILE IS AUTOMATICALLY CONFIGURED ###
# You may comment out this entry, but any other modifications may be lost.\n"

# Parse apt configuration and return requested variable value.
apt_config_val() {
  APTVAR="$1"
  if [ -x "$APT_CONFIG" ]; then
    "$APT_CONFIG" dump | sed -e "/^$APTVAR /"'!d' -e "s/^$APTVAR \"\(.*\)\".*/\1/"
  fi
}

# Install the repository/package signing keys, if they aren't already.
# (see also: https://www.google.com/linuxrepositories/)
install_key() {
  APT_KEY="`which apt-key 2> /dev/null`"
  if [ ! -x "$APT_KEY" ]; then
    return
  fi

  NEED_KEYS=0
  "$APT_KEY" export 7fac5991 2>&1 | \
    grep -q -- "-----BEGIN PGP PUBLIC KEY BLOCK-----"
  if [ $? -ne 0 ]; then
    NEED_KEYS=1
  fi

  "$APT_KEY" export d38b4796 2>&1 | \
    grep -q -- "-----BEGIN PGP PUBLIC KEY BLOCK-----"
  if [ $? -ne 0 ]; then
    NEED_KEYS=1
  fi

  if [ $NEED_KEYS -eq 1 ]; then
    "$APT_KEY" add - >/dev/null 2>&1 <<KEYDATA
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1

mQINBFTBKn4BEAC7ErevA1MlE2Sux6TZ/4DjnD9qcpAFxHVAElw6yFdP123ORnaV
La+MV2yx7Kn6GSPjF9ET/+f2BPmE76QBK8LMfobbLRJuBtjs8v0ObhcaVqXuM0hk
GpqnYvyGO0OaZRT42/ca9+5LororcUesuyzmMwgDjlrr5bmpK4CsJausDPm7l5UC
5geTLXj9SfbXh9KUolCbRfliTyEBn7wXUARHQL9VYPSaV+stwF7f49shm+p+qN4R
aQTmjrx0z7rJ7SvYuhnVmJ3esq2eLlFDA73GaUieKjJk6hbmC+0ZFXqcMjpPTawr
KPP8Yyl8uVGALD1UTj+tIw0SSOvJeGWqYWnpkKL32igl2GWuEbbA0QdSefx5ECJ1
OM91A9eUtCM5Ox8VZGz8cZt6xWXU18Xeu+2KdFvpm0UJAc49Wez+66WXSduSplMB
6c+gw0TjcjNnqEdXpn36FVLIw89Nrxahg05kKOnFmyyfWN6nNelL+wHYMEMDaDgj
CTMlHJL0a1MsIAbUO41N+NUr7gljpNBmmOYz9pV642ZYizK2EysHFnmD3UFEfzBw
KN9XSJnbf/2xAeFyiwEH2jCPJbCb/7ixTA7m9ZwFsdzgU67zp/QradE7wgWysF61
DFshBE8Ybje+dFdhiNuvPtD+LaQAFzkyjaBy9q5ZjM2DKNKSClrEkpslewARAQAB
tC9WaXZhbGRpIFBhY2thZ2UgQ29tcG9zZXIgPHBhY2thZ2VyQHZpdmFsZGkuY29t
PokCPgQTAQIAKAUCVMEqfgIbAwUJAeEzgAYLCQgHAwIGFQgCCQoLBBYCAwECHgEC
F4AACgkQzsOEqL8XAPhy3Q/+OcmW/frjQWFDM1ljgLPm4pM65GhLFkidMoB+gzqa
WzsFXDMhSXIRbcOkaHeUIlttnzXz02XhUyQNgfyhpzkCZO75M8Z1s5RpSh5p9iEA
yLK8m87TlMevJeOLA46LC+58xgBPPOHElwgI9Itzq9BrVyedM93phd2wTTA7I37q
Of8mi1T3cBgjZ1I+cm6drwo+HWc1X1h193H7l+yZiwfoHbtUk268ZHgxfU3iseXX
yREDihyX4/d3y3fSKv9H/PsXyNVN8qfdLZsDL0RWaO/x8qEtuMy7iUuW77zt+jej
jP8IXdAig9RSd1zmrvrDTUF8v8YH00l7gx9rPoBAyIKu+z/wILHGTN4QNZODazMY
bYvCQ1xHwaGEQ8OIE+3HWtEeKPlzAU62fsaVleshk8f9Zi/LYG5bJzCxpBRa4FA1
IFn45UeLpey/oIcKu0pSiIiqE6iG1AdPDjCnq8rsVXXDNHd5BuA13JfvSKAb0bS+
ibcCMUuvFbVlO3KcsHP8wNHudXitQtVYfCOmswfcCp6dGFt7rHqrEYVi1jPkT3ZN
MzSO4NoDWfteDkJnf1A2zfYWwq94uZFrVkdT/fMObI8/lWw+2YTq8T11eyB0Pvie
Pq72sJXEeXspO2IwlRW1lYXjSL4yEX8tR1uZiji48zCurjDzV8TL+F975tbKuMev
juW5Ag0EVMEqfgEQAJgHHqiPsFJ2xy377FfBQn62KnSiNHXjjxN8KhNX7k2abz6K
yKqsoxc7W6Dgt91D/VTmHjBsBGUqMRCekqAnShEtj3+2fdSux35g1uXld97QSrmd
X0rQM2JG8vg8MaZSwlZQKfr2AylhBCXBVz9tPUEEVQod9ZKiWizKV8l+itxUqKPx
SBLJORvrWquoRpyzRMcv9UsgZSR10S3F/76cBWwGnuD8k8Ba8N/PTzsuyWMbname
+G2OF9ufxg8FC08ZCsRy0nS7Wkb2+Z+3+jGUZKnF/2G+t+kykKjm/PXQXPgsQfSA
OEOw6PH0obJmmMK+HQcg8/YwikLOD+MnG53QF8tDL/JevEJ/+xGuGqZoSLg0KnRM
TdMaBsSqpNF8dGlrcvUFTa+gey1GugYmzf+iTsNrvZYg8ETPzBuza7p8cVFoWeC6
avL4UsZXfiIxmBpfpLY44QH1+u/Ij3iLE4LonFg2Ak+btyPFxlJ4oUjOlGvEbJT7
uXUrILVDVmulleqxJ5s06v4XbqZ32CsYT8/skGYlWcJBy5tDACxdh7CmjtILBOjX
K6+PvxzTLXEDenXB2yKETF6jKuLuh4Ua0dO92Ownm9YgVGNC4QO6Y5lwKqUqYGZY
DKHtFOzRhT0OL9PWfi+sMFc5c2zFHUjgPMmYAC/1qk7XRr7915r1G/eaC5SPABEB
AAGJAiUEGAECAA8FAlTBKn4CGwwFCQHhM4AACgkQzsOEqL8XAPis8hAAmQLZHRyA
gNSGQEpsx7qwr8ngyYTjdKSE+yJRP/2fRCnWI+E8GGW8MLofsZwzunhpfNmkS2B2
M/iVgI1nkVh3ZGyVIkgVwqXFdmixWd5BhAUIpc8sXEciz4WZd1Aau/tkjnGl/jsP
uuEHZTGdoYEmp8E5/xFSpMY3y4OAooWsr4rpoUyZYNvD2gyM4bmpUc8GsO2UExxX
1ohvtqGKo13I47ce/wjQYOMILCbt0IExqjy7kCcqKzB3Wd8q6tF0vMRRx6Rj7MH/
yk6IG5wHEhwJhQJ7lKoLXzud/QHuU/Y1azwhoWv9+Bpt5N1KcaOKERLOjt6Lc7Be
cYqfQ9nnUWWQ7tbmVYG+lzANuqoakEWypms3o/OUyQQ05iZB5cZta/0tiI+omFJr
0wPnPagAvSwEZnfqsPX5Wpq5UFOUpi4JVY1Bc+WxWjEIdLPedKEtdtgFyp2lrKQU
uI+sWPRwiidtlzC7OMJv573WVxj+YCzPpJTh+76nRhH2sVON8LFWVTwVUebReean
CYh9hxdZFtb26Van/IEhL8rVugHah4UJOxQY/e5atpn3xWekfC5rAyKWJUok06kZ
rRa0j5pHwF3/Eibv4rU1BZrDdymtYlEJj+YivgsO+Zx3bo3wbhX1N3cXreNCe+D4
tM3ieUti7MisRAlo8D+k62oVxd+PxZ/9FQA=
=qqBc
-----END PGP PUBLIC KEY BLOCK-----
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1

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
/n/CsdO0365yqDO/ADscehlVqdAupVv2
=dmoF
-----END PGP PUBLIC KEY BLOCK-----
KEYDATA
  fi
}

# Install another key (7B8B44A1) for use with our apt repository in the future
install_future_key() {
  APT_KEY="`which apt-key 2> /dev/null`"
  if [ -x "$APT_KEY" ]; then
    if ! "$APT_KEY" list | grep -qF 7B8B44A1; then
      "$APT_KEY" add - >/dev/null 2>&1 <<KEYDATA
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1

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
=eFkk
-----END PGP PUBLIC KEY BLOCK-----
KEYDATA
    fi
  fi
}

# Set variables for the locations of the apt sources lists.
find_apt_sources() {
  APTDIR=$(apt_config_val Dir)
  APTETC=$(apt_config_val 'Dir::Etc')
  APT_SOURCES="$APTDIR$APTETC$(apt_config_val 'Dir::Etc::sourcelist')"
  APT_SOURCESDIR="$APTDIR$APTETC$(apt_config_val 'Dir::Etc::sourceparts')"
}

# Update the Google repository if it's not set correctly.
# Note: this doesn't necessarily enable the repository, it just makes sure the
# correct settings are available in the sources list.
# Returns:
# 0 - no update necessary
# 2 - error
update_bad_sources() {
  if [ ! "$REPOCONFIG" ]; then
    return 0
  fi

  find_apt_sources

  SOURCELIST="$APT_SOURCESDIR/@@PACKAGE@@.list"
  # Don't do anything if the file isn't there, since that probably means the
  # user disabled it.
  if [ ! -r "$SOURCELIST" ]; then
    return 0
  fi

  # Basic check for active configurations (non-blank, non-comment lines).
  ACTIVECONFIGS=$(grep -v "^[[:space:]]*\(#.*\)\?$" "$SOURCELIST" 2>/dev/null)

  # Check if the correct repository configuration is in there.
  REPOMATCH=$(grep -E "^[[:space:]#]*\b$REPOCONFIGREGEX\b" "$SOURCELIST" \
    2>/dev/null)

  # Check if the correct repository is disabled.
  MATCH_DISABLED=$(echo "$REPOMATCH" | grep "^[[:space:]]*#" 2>/dev/null)

  # Now figure out if we need to fix things.
  BADCONFIG=1
  if [ "$REPOMATCH" ]; then
    # If it's there and active, that's ideal, so nothing to do.
    if [ ! "$MATCH_DISABLED" ]; then
      BADCONFIG=0
    else
      # If it's not active, but neither is anything else, that's fine too.
      if [ ! "$ACTIVECONFIGS" ]; then
        BADCONFIG=0
      fi
    fi
  fi

  if [ $BADCONFIG -eq 0 ]; then
    return 0
  fi

  # At this point, either the correct configuration is completely missing, or
  # the wrong configuration is active. In that case, just abandon the mess and
  # recreate the file with the correct configuration. If there were no active
  # configurations before, create the new configuration disabled.
  DISABLE=""
  if [ ! "$ACTIVECONFIGS" ]; then
    DISABLE="#"
  fi
  printf "$SOURCES_PREAMBLE" > "$SOURCELIST"
  printf "$DISABLE$REPOCONFIG\n" >> "$SOURCELIST"
  if [ $? -eq 0 ]; then
    return 0
  fi
  return 2
}

# Add the Google repository to the apt sources.
# Returns:
# 0 - sources list was created
# 2 - error
create_sources_lists() {
  if [ ! "$REPOCONFIG" ]; then
    return 0
  fi

  find_apt_sources

  SOURCELIST="$APT_SOURCESDIR/@@PACKAGE@@.list"
  if [ -d "$APT_SOURCESDIR" ]; then
    printf "$SOURCES_PREAMBLE" > "$SOURCELIST"
    printf "$REPOCONFIG\n" >> "$SOURCELIST"
    if [ $? -eq 0 ]; then
      return 0
    fi
  fi
  return 2
}

# Remove our custom sources list file.
# Returns:
# 0 - successfully removed, or not configured
# !0 - failed to remove
clean_sources_lists() {
  if [ ! "$REPOCONFIG" ]; then
    return 0
  fi

  find_apt_sources

  rm -f "$APT_SOURCESDIR/@@PACKAGE@@.list"
}

# Detect if the repo config was disabled by distro upgrade and enable if
# necessary.
handle_distro_upgrade() {
  if [ ! "$REPOCONFIG" ]; then
    return 0
  fi

  find_apt_sources
  SOURCELIST="$APT_SOURCESDIR/@@PACKAGE@@.list"
  if [ -r "$SOURCELIST" ]; then
    REPOLINE=$(grep -E "^[[:space:]]*#[[:space:]]*$REPOCONFIGREGEX[[:space:]]*# disabled on upgrade to .*" "$SOURCELIST")
    if [ $? -eq 0 ]; then
      sed -i -e "s,^[[:space:]]*#[[:space:]]*\(.*\)[[:space:]]*# disabled on upgrade to .*,\1," \
        "$SOURCELIST"
      LOGGER=$(which logger 2> /dev/null)
      if [ "$LOGGER" ]; then
        "$LOGGER" -t "$0" "Reverted repository modification: $REPOLINE."
      fi
    fi
  fi
}

DEFAULT_ARCH="@@ARCHITECTURE@@"

get_lib_dir() {
  if [ "$DEFAULT_ARCH" = "i386" ]; then
    LIBDIR=lib/i386-linux-gnu
  elif [ "$DEFAULT_ARCH" = "amd64" ]; then
    LIBDIR=lib/x86_64-linux-gnu
  else
    echo Unknown CPU Architecture: "$DEFAULT_ARCH"
    exit 1
  fi
}
