# Copyright 2015 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

{
  # This is the list of configs that you can pass to mb; each config
  # represents a particular combination of GYP_DEFINES/gn args that
  # we must support. A given config *may* be platform-specific but
  # is not necessarily so (i.e., we might have mac, win, and linux
  # bots all using the 'gn_release_bot' config).
  'configs': {
    'android_cast_gyp_debug_static_bot': ['android', 'cast', 'gyp', 'debug_static_bot'],
    'android_clang_asan_gyp_debug_bot': ['android', 'clang', 'asan', 'gyp', 'debug_bot'],\
    'android_gn_debug_bot': ['android', 'gn', 'debug_bot'],
    'android_gn_debug_static_bot': ['android', 'gn', 'debug_static_bot'],
    'android_gn_debug_static_bot_arm64': ['android', 'gn', 'debug_static_bot', 'arm64'],
    'android_gn_debug_static_bot_mipsel': ['android', 'gn', 'debug_static_bot', 'mipsel'],
    'android_gn_debug_static_bot_x64': ['android', 'gn', 'debug_static_bot', 'x64'],
    'android_gn_debug_static_bot_x86': ['android', 'gn', 'debug_static_bot', 'x86'],
    'android_gn_release_bot': ['android', 'gn', 'release_bot'],
    'android_gn_release_trybot': ['android', 'gn', 'release_trybot'],
    'android_gyp_debug_static_bot': ['android', 'gyp', 'debug_static_bot'],
    'android_gyp_debug_static_bot_arm64': ['android', 'gyp', 'debug_static_bot', 'arm64'],
    'android_gyp_release_bot': ['android', 'gyp', 'release_bot'],
    'android_gyp_release_bot_minimal_symbols': ['android', 'gyp', 'release_bot_minimal_symbols'],
    'cast_gn_release_bot': ['cast', 'gn', 'release_bot'],
    'cast_gn_release_trybot': ['cast', 'gn', 'release_trybot'],
    'chromeos_gn_debug_bot': ['chromeos', 'gn', 'debug_bot'],
    'chromeos_ozone_gn_release_bot': ['chromeos', 'ozone', 'gn', 'release_bot'],
    'chromeos_ozone_gn_release_trybot': ['chromeos', 'ozone', 'gn', 'release_trybot'],
    'dev_gn_debug': ['gn', 'debug', 'shared', 'full_symbols'],
    'dev_gn_release': ['gn', 'release', 'shared'],
    'dev_gyp_debug': ['gyp', 'debug', 'shared', 'full_symbols'],
    'dev_gyp_release': ['gyp', 'release', 'shared'],
    'embedded_gyp_debug_bot': ['embedded', 'gyp', 'debug_bot'],

    # This is the "deployment" config for the blimp builds. Currently
    # we want them to be debug, non-optimized builds (and we don't need any
    # chrome branding), so we don't use the "official" mixin.
    # We need chromeos and ozone to eliminate any dependencies on X11. We
    # dont need aura as it is implied by chromeos and ozone.
    'gn_blimp_debug': ['gn', 'chromeos', 'ozone', 'debug'],

    'gn_cfi_release_bot': ['gn', 'cfi', 'release_bot'],
    'gn_cfi_release_trybot': ['gn', 'cfi', 'release_trybot'],
    'gn_cfi_diag_release_bot': ['gn', 'cfi', 'cfi_diag', 'release_bot'],
    'gn_debug_bot': ['gn', 'debug_bot'],
    'gn_debug_bot_minimal_symbols': ['gn', 'debug_bot_minimal_symbols'],
    'gn_debug_bot_minimal_symbols_x86': ['gn', 'debug_bot_minimal_symbols', 'x86'],
    'gn_debug_static_bot': ['gn', 'debug_static_bot'],
    'gn_linux_upload': ['gn_linux_upload', 'official', 'goma'],
    'gn_official': ['gn', 'official'],
    'gn_official_goma': ['gn', 'official', 'goma'],
    'gn_official_goma_minimal_symbols_android': ['gn', 'official', 'goma', 'minimal_symbols', 'android'],
    'gn_official_goma_minimal_symbols_android_arm64': ['gn', 'official', 'goma', 'minimal_symbols', 'android', 'arm64'],
    'gn_release_bot': ['gn', 'release_bot'],
    'gn_release_bot_minimal_symbols': ['gn', 'release_bot_minimal_symbols'],
    'gn_release_bot_minimal_symbols_x86': ['gn', 'release_bot_minimal_symbols', 'x86'],
    'gn_release_trybot': ['gn', 'release_trybot'],
    'gn_release_trybot_x86': ['gn', 'release_trybot', 'x86'],
    'gyp_debug_bot': ['gyp', 'debug_bot'],
    'gyp_debug_bot_x86': ['gyp', 'debug_bot', 'x86'],
    'gyp_official_goma': ['gyp', 'official', 'goma'],
    'gyp_official_goma_chromeos': ['gyp', 'official', 'goma', 'chromeos'],
    'gyp_official_goma_x86': ['gyp', 'official', 'goma', 'x86'],
    'gyp_official_goma_minimal_symbols_android': ['gyp', 'official', 'goma', 'minimal_symbols', 'android'],
    'gyp_official_goma_minimal_symbols_android_arm64': ['gyp', 'official', 'goma', 'minimal_symbols', 'android', 'arm64'],
    'gyp_official_goma_minimal_symbols_x64': ['gyp', 'official', 'goma', 'minimal_symbols', 'x64'],
    'gyp_official_goma_minimal_symbols_x86': ['gyp', 'official', 'goma', 'minimal_symbols', 'x86'],
    'gyp_release_bot_android': ['gyp', 'release_bot', 'android'],
    'gyp_release_trybot': ['gyp', 'release_trybot'],
    'gyp_release_trybot_x64': ['gyp', 'release_trybot', 'x64'],
    'gn_release_libfuzzer_asan': ['gn', 'release', 'libfuzzer', 'asan', 'proprietary_codecs', 'pdf_xfa'],
    'gn_release_libfuzzer_msan': ['gn', 'release', 'libfuzzer', 'msan', 'proprietary_codecs', 'pdf_xfa'],
    'gn_release_drmemory_drfuzz_x86': ['gn', 'release', 'drmemory', 'drfuzz', 'x86', 'proprietary_codecs'],
    'gn_release_drmemory_drfuzz': ['gn', 'release', 'drmemory', 'drfuzz', 'proprietary_codecs'],
    'gyp_valgrind_release_bot': ['gyp', 'valgrind', 'release_bot'],
    'gyp_valgrind_debug_bot': ['gyp', 'valgrind', 'debug_bot'],
    'gyp_valgrind_chromeos_release_bot': ['gyp', 'chromeos', 'valgrind', 'release_bot'],
    'gyp_drmemory_shared_release_x86': ['gyp', 'drmemory', 'shared', 'release', 'x86'],
    'gyp_drmemory_shared_release_x64': ['gyp', 'drmemory', 'shared', 'release', 'x64'],

    # This is just for completeness; any bot that uses this config
    # should never actually run MB.
    'none': ['none'],

    'noswarming_gn_release_bot': ['noswarming', 'gn', 'release_bot'],
    'noswarming_gyp_release_bot': ['noswarming', 'gyp', 'release_bot'],
    'noswarming_gyp_release_bot_mac_strip': ['noswarming', 'gyp', 'release_bot', 'mac_strip'],
    'noswarming_gyp_release_bot_x86': ['noswarming', 'gyp', 'release_bot', 'x86'],

    'swarming_android_gn_release_bot_minimal_symbols': ['swarming', 'android', 'gn', 'release_bot_minimal_symbols'],
    'swarming_asan_lsan_gyp_release_trybot': ['swarming', 'asan', 'lsan', 'release_trybot'],
    'swarming_msan_gyp_release_trybot': ['swarming', 'chromeos', 'msan', 'gyp', 'release_trybot'],
    'swarming_deterministic_gyp_release_bot': ['swarming', 'deterministic', 'gyp', 'release_bot'],
    'swarming_gpu_fyi_tests_gn_debug_bot': ['swarming', 'gpu_tests', 'internal_gles2_conform_tests', 'gn', 'debug_bot', 'angle_deqp_tests'],
    'swarming_gpu_fyi_tests_gn_debug_trybot': ['swarming', 'gpu_tests', 'internal_gles2_conform_tests', 'gn', 'debug_trybot', 'angle_deqp_tests'],
    'swarming_gpu_fyi_tests_gn_release_bot': ['swarming', 'gpu_tests', 'internal_gles2_conform_tests', 'gn', 'release_bot', 'angle_deqp_tests'],
    'swarming_gpu_fyi_tests_gn_release_trybot': ['swarming', 'gpu_tests', 'internal_gles2_conform_tests', 'gn', 'release_trybot', 'angle_deqp_tests'],
    'swarming_gpu_tests_gn_debug_bot': ['swarming', 'gpu_tests', 'gn', 'debug_bot'],
    'swarming_gpu_tests_gn_release_bot': ['swarming', 'gpu_tests', 'gn', 'release_bot'],
    'swarming_gpu_tests_gn_release_trybot': ['swarming', 'gpu_tests', 'gn', 'release_trybot'],
    'swarming_gn_debug_bot': ['swarming', 'gn', 'debug_bot'],
    'swarming_gn_debug_bot_minimal_symbols_x64': ['swarming', 'gn', 'debug_bot_minimal_symbols', 'x64'],
    'swarming_gn_debug_bot_x64': ['swarming', 'gn', 'debug_bot', 'x64'],
    'swarming_gn_debug_trybot': ['swarming', 'gn', 'debug_trybot'],
    'swarming_gn_non_oilpan_debug_bot_minimal_symbols_x64': ['swarming', 'gn', 'non_oilpan', 'debug_bot_minimal_symbols', 'x64'],
    'swarming_gn_non_oilpan_debug_bot_x64': ['swarming', 'gn', 'non_oilpan', 'debug_bot_minimal_symbols', 'x64'],
    'swarming_gn_non_oilpan_release_bot_x64': ['swarming', 'gn', 'non_oilpan', 'release_bot', 'x64'],
    'swarming_gn_non_oilpan_release_trybot_minimal_symbols_x64': ['swarming', 'gn', 'non_oilpan', 'release_trybot', 'minimal_symbols', 'x64'],
    'swarming_gn_release_bot': ['swarming', 'gn', 'release_bot'],
    'swarming_gn_release_bot_x64': ['swarming', 'gn', 'release_bot', 'x64'],
    'swarming_gn_release_trybot': ['swarming', 'gn', 'release_bot'],
    'swarming_gn_release_trybot_minimal_symbols_x64': ['swarming', 'gn', 'release_trybot', 'minimal_symbols', 'x64'],
    'swarming_gyp_asan_lsan_release_bot_x64': ['swarming', 'gyp', 'asan', 'lsan', 'release_bot', 'x64'],
    'swarming_gyp_debug_bot_minimal_symbols_x64': ['swarming', 'gyp', 'debug_bot_minimal_symbols', 'x64'],
    'swarming_gyp_debug_bot_minimal_symbols_x86': ['swarming', 'gyp', 'debug_bot_minimal_symbols', 'x86'],
    'swarming_gyp_debug_bot_no_symbols_x86': ['swarming', 'gyp', 'debug_bot', 'no_symbols', 'x86'],
    'swarming_gyp_debug_bot_x64': ['swarming', 'gyp', 'debug_bot', 'x64'],
    'swarming_gyp_debug_trybot_x86': ['swarming', 'gyp', 'debug_trybot', 'x86'],
    'swarming_gyp_msan_release_bot_x64': ['swarming', 'gyp', 'msan', 'release_bot', 'x64'],
    'swarming_gyp_non_oilpan_asan_lsan_release_bot_x64': ['swarming', 'gyp', 'non_oilpan', 'asan', 'lsan', 'release_bot', 'x64'],
    'swarming_gyp_non_oilpan_debug_bot_minimal_symbols_x64': ['swarming', 'gyp', 'non_oilpan', 'debug_bot_minimal_symbols', 'x64'],
    'swarming_gyp_non_oilpan_debug_bot_minimal_symbols_x86': ['swarming', 'gyp', 'non_oilpan', 'debug_bot_minimal_symbols', 'x86'],
    'swarming_gyp_non_oilpan_debug_bot_x64': ['swarming', 'gyp', 'non_oilpan', 'debug_bot_minimal_symbols', 'x64'],
    'swarming_gyp_non_oilpan_release_bot_minimal_symbols_x86': ['swarming', 'gyp', 'non_oilpan', 'release_bot', 'minimal_symbols', 'x86'],
    'swarming_gyp_non_oilpan_release_bot_x64': ['swarming', 'gyp', 'non_oilpan', 'release_bot', 'x64'],
    'swarming_gyp_non_oilpan_release_trybot_minimal_symbols_x64': ['swarming', 'gyp', 'non_oilpan', 'release_trybot', 'minimal_symbols', 'x64'],
    'swarming_gyp_non_oilpan_release_trybot_minimal_symbols_x86': ['swarming', 'gyp', 'non_oilpan', 'release_trybot', 'minimal_symbols', 'x86'],
    'swarming_gyp_release_bot': ['swarming', 'gyp', 'release_bot'],
    'swarming_gyp_release_bot_arm': ['swarming', 'gyp', 'release_bot', 'arm', 'crosscompile'],
    'swarming_gyp_release_bot_minimal_symbols_x64': ['swarming', 'gyp', 'release_bot_minimal_symbols', 'x64'],
    'swarming_gyp_release_bot_minimal_symbols_x86': ['swarming', 'gyp', 'release_bot_minimal_symbols', 'x86'],
    'swarming_gyp_release_bot_x64': ['swarming', 'gyp', 'release_bot', 'x64'],
    'swarming_gyp_release_trybot_arm': ['swarming', 'gyp', 'release_trybot', 'arm', 'crosscompile'],
    'swarming_gyp_release_trybot_minimal_symbols_x64': ['swarming', 'gyp', 'release_trybot', 'minimal_symbols', 'x64'],
    'swarming_gyp_release_trybot_minimal_symbols_x86': ['swarming', 'gyp', 'release_trybot', 'minimal_symbols', 'x86'],
    'swarming_tsan_gyp_release_trybot': ['swarming', 'disable_nacl', 'tsan', 'gyp', 'release_trybot'],

    # Configurations that build with proprietary codecs enabled.
    'android_gn_debug_bot_chrome_with_codecs': ['android', 'gn', 'debug_bot', 'chrome_with_codecs'],
    'android_gn_release_bot_chrome_with_codecs': ['android', 'gn', 'release_bot', 'chrome_with_codecs'],
    'gn_debug_bot_minimal_symbols_chrome_with_codecs': ['gn', 'debug_bot_minimal_symbols', 'chrome_with_codecs'],
    'gn_debug_static_bot_chrome_with_codecs': ['gn', 'debug_static_bot', 'chrome_with_codecs'],
    'gn_release_bot_chrome_with_codecs': ['gn', 'release_bot', 'chrome_with_codecs'],
    'gn_release_bot_minimal_symbols_chrome_with_codecs': ['gn', 'release_bot_minimal_symbols', 'chrome_with_codecs'],

    # This indicates that we haven't yet set up this bot w/ MB. This is
    # different from 'none' in that a bot set to 'none' should never do
    # compiles; a bot set to 'tbd' should do compiles but we haven't
    # added the entries yet.
    # 'tbd': ['none'],

    'win_clang_debug_bot': ['gn', 'clang', 'debug_bot_minimal_symbols'],
  },

  # This is a list of configs that do not actually exist on any bot
  # but are used so commonly by devs that we must support them.
  'common_dev_configs': [
    'dev_gn_debug',
    'dev_gn_release',
    'dev_gyp_debug',
    'dev_gyp_release',
  ],

  # This is a list of configs that some private (not publicly accessible)
  # bot somewhere uses and that we must support. Ideally we should actually
  # have a bot for each of these on the public waterfall. Each config should
  # at least have a contact listed.
  'private_configs': [
  ],

  # This is a list of configs that are not commonly used by that we should
  # make some effort to support, but if it breaks that is not the end of
  # the world. Each config should have a contact listed, and we expect the
  # contact to be on the hook for fixing the config.
  'unsupported_configs': [
  ],

  # This is a dict mapping a given 'mixin' name to a dict of settings that
  # mb should use. See //tools/mb/docs/user_guide.md for more information.
  'mixins': {
    'android': {
      'gn_args': 'target_os="android"',
      'gyp_defines': 'OS=android',
    },

    'archive_gpu_tests': {
      # archive_gpu_tests=true is not needed in GN builds.
      'gyp_defines': 'archive_gpu_tests=1',
    },

    'angle_deqp_tests': {
      'gn_args': 'build_angle_deqp_tests=true',
    },

    'arm': {
      'gn_args': 'target_cpu="arm"',
      'gyp_defines': 'target_arch=arm',
    },

    'arm64': {
      'gn_args': 'target_cpu="arm64"',
      'gyp_defines': 'target_arch=arm64',
    },

    'arm64': {
      'gn_args': 'target_cpu="arm64"',
      'gyp_defines': 'target_arch=arm64',
    },

    'asan': {
      'gn_args': 'is_asan=true',
      'gyp_defines': 'asan=1',
    },

    'cast': {
      'gn_args': 'is_chromecast=true',
      'gyp_defines': 'chromecast=1',
    },

    'cfi': {
      'gn_args': 'is_cfi=true',
      'gyp_defines': 'cfi_vptr=1',
    },

    'cfi_diag': {
      'gn_args': 'use_cfi_diag=true',
      'gyp_defines': 'cfi_diag=1',
    },

    'chrome_with_codecs': {
      'gn_args': 'ffmpeg_branding="Chrome" proprietary_codecs=true',
      'gyp_defines': 'ffmpeg_branding=Chrome proprietary_codecs=1',
    },

    'chromeos': {
      'gn_args': 'target_os="chromeos"',
      'gyp_defines': 'chromeos=1',
    },

    'clang': {
      'gn_args': 'is_clang=true',
      'gyp_defines': 'clang=1',
    },

    'crosscompile': {
      # This mixin is only needed on GYP bots that are doing cross-compiles
      # but are *not* targetting Android or iOS (where build/gyp_chromium
      # will set the crosscompile variable automatically). It is not need
      # in GN at all.
      'gyp_crosscompile': True,
    },

    'dcheck_always_on': {
      'gn_args': 'dcheck_always_on=true',
      'gyp_defines': 'dcheck_always_on=1',
    },

    'debug': {
      'gn_args': 'is_debug=true',
    },

    'debug_bot': {
      'mixins': ['debug', 'shared', 'goma'],
    },

    'debug_bot_minimal_symbols': {
      'mixins': ['debug_bot', 'minimal_symbols'],
    },

    'debug_static_bot': {
      'mixins': ['debug', 'static', 'minimal_symbols', 'goma'],
    },

    'debug_trybot': {
      'mixins': ['debug_bot_minimal_symbols'],
    },

    # TODO(zforman): This doesn't do anything now, find out if it can
    # be removed, and remove it.
    'deterministic': {
      'gn_args': 'error',
    },

    'disable_nacl': {
      'gn_args': 'enable_nacl=false',
      'gyp_defines': 'disable_nacl=1',
    },

    'embedded': {
      'gn_args': 'error',
      'gyp_defines': 'embedded=1',
    },

    'full_symbols': {
      'gn_args': 'symbol_level=2',
      'gyp_defines': 'fastbuild=0',
    },

    'gn_linux_upload': {
      'type': 'gn',

      # We don't want to require a runtime dependency on glib in the
      # GN binary; ideally we could just turn glib off, but that doesn't
      # actually work, so we need to pretend to be doing an ozone build
      # in order for the flag to actually take effect.
      'gn_args': 'use_ozone=true',
    },

    'gn': {'type': 'gn'},

    'goma': {
      # The MB code will properly escape goma_dir if necessary in the GYP
      # code path; the GN code path needs no escaping.
      'gn_args': 'use_goma=true goma_dir="$(goma_dir)"',
      'gyp_defines': 'use_goma=1 gomadir=$(goma_dir)',
    },

    'gpu_tests': {
      'mixins': ['archive_gpu_tests', 'chrome_with_codecs'],
    },

    'gyp': {'type': 'gyp'},

    'internal_gles2_conform_tests': {
      'gn_args': 'internal_gles2_conform_tests=true',
      'gyp_defines': 'internal_gles2_conform_tests=1',
    },

    'libfuzzer': { 'gn_args': 'use_libfuzzer=true' },

    'lsan': {
      'gn_args': 'is_lsan=true',
      'gyp_defines': 'lsan=1',
    },

    'mac_strip': {
      'gn_args': 'error', # TODO(GYP): Port mac_strip_release
      'gyp_defines': 'mac_strip_release=1',
    },

    'minimal_symbols': {
      'gn_args': 'symbol_level=1',
      'gyp_defines': 'fastbuild=1',
    },

    'mipsel': {
      'gn_args': 'target_cpu="mipsel"',
      'gyp_defines': 'target_arch=mipsel',
    },

    'msan': {
      'gn_args': 'is_msan=true msan_track_origins=2 use_prebuilt_instrumented_libraries=true',
      'gyp_defines': 'msan=1 msan_track_origins=2 use_prebuilt_instrumented_libraries=1',
    },

    'no_symbols': {
      'gn_args': 'symbol_level=0',
      'gyp_defines': 'fastbuild=2',
    },

    'non_oilpan': {
      'gn_args': 'enable_oilpan=false',
      'gyp_defines': 'enable_oilpan=0',
    },

    # This config is used by bots that aren't building Chromium and should
    # never be running MB. It is used for tracking purposes. These values
    # were picked such that if someone did try to run MB, both GN and GYP
    # should error out.
    'none': {
      'gn_args': 'error',
      'gyp_defines': 'target_arch=unknown',
    },

    'noswarming': {
      # test_isolation_mode doesn't exist in a GN build (it's always a no-op).
      'gn_args': '',
      'gyp_defines': 'test_isolation_mode=noop',
    },

    'official': {
      'gn_args': 'is_chrome_branded=true is_official_build=true is_debug=false',
      'gyp_defines': 'branding=Chrome buildtype=Official',
    },

    'ozone': {
      'gn_args': 'use_ozone=true',
      'gyp_defines': 'use_ozone=1',
    },

    'pdf_xfa': {
      'gn_args': 'pdf_enable_xfa=true',
      'gyp_defines': 'pdf_enable_xfa=1',
    },

    'proprietary_codecs': {
      'gn_args': 'proprietary_codecs=true',
      'gyp_defines': 'proprietary_codecs=1',
    },

    'release': {
      'gn_args': 'is_debug=false',
    },

    'release_bot': {
      'mixins': ['release', 'static', 'goma'],
    },

    'release_bot_minimal_symbols': {
      'mixins': ['release_bot', 'minimal_symbols'],
    },

    'release_trybot': {
      'mixins': ['release_bot_minimal_symbols', 'dcheck_always_on']
    },

    'shared': {
      'gn_args': 'is_component_build=true',
      'gyp_defines': 'component=shared_library',
    },

    'static': {
      'gn_args': 'is_component_build=false',
      'gyp_defines': 'component=static_library',
    },

    'swarming': {
      'gn_args': '',
      'gyp_defines': 'test_isolation_mode=prepare',
    },

    'tsan': {
      'gn_args': 'is_tsan=true',
      'gyp_defines': 'tsan=1',
    },

    'x64': {
      'gn_args': 'target_cpu="x64"',
      'gyp_defines': 'target_arch=x64',
    },

    'x86': {
      'gn_args': 'target_cpu="x86"',
      'gyp_defines': 'target_arch=ia32',
    },

    'drfuzz': { 'gn_args': 'use_drfuzz=true' },

    'drmemory': {
      'gn_args': 'is_component_build=true enable_iterator_debugging=false',
      'gyp_defines': 'component=shared_library build_for_tool=drmemory',
    },

    'valgrind': {
      # TODO: add gn_args for 'build_for_tool=memcheck'
      'gyp_defines': 'build_for_tool=memcheck',
    }
  },

  # This is a map of buildbot master names -> buildbot builder names ->
  # config names (where each config name is a key in the 'configs' dict,
  # above). mb uses this dict to look up which config to use for a given bot.
  # The builders should be sorted by the order they appear in the /builders
  # page on the buildbots, *not* alphabetically.
  #
  # TODO(crbug.com/481692): Add in remaining bots on the waterfalls.
  'masters': {
    'chrome': {
      'precise64': 'gn_official',
    },
    'chrome.continuous': {
      'precise64 trunk': 'gn_official',
    },
    'chromium': {
      'Win': 'noswarming_gyp_release_bot',
      'Mac': 'noswarming_gyp_release_bot_mac_strip',
      'Linux x64': 'noswarming_gn_release_bot',
      'Linux': 'noswarming_gyp_release_bot_x86',
      'Android': 'android_gyp_release_bot_minimal_symbols',
    },
    'chromium.android': {
      'Android GN Builder (dbg)': 'android_gn_debug_bot',
      'Android MIPS Builder (dbg)': 'android_gn_debug_static_bot_mipsel',
      'Android arm Builder (dbg)': 'android_gn_debug_static_bot',
      'Android arm64 Builder (dbg)': 'android_gn_debug_static_bot_arm64',
      'Android x64 Builder (dbg)': 'android_gn_debug_static_bot_x64',
      'Android x86 Builder (dbg)': 'android_gn_debug_static_bot_x86',
      'Jelly Bean Tester': 'android_gn_debug_static_bot',
      'KitKat Tablet Tester': 'android_gn_debug_static_bot',
      'Lollipop Consumer Tester': 'android_gn_debug_static_bot_arm64',
      'Lollipop Low-end Tester': 'android_gn_debug_static_bot',
      'Lollipop Phone Tester': 'android_gn_debug_static_bot',
      'Lollipop Tablet Tester': 'android_gn_debug_static_bot',
      'Marshmallow 64 bit Tester': 'android_gn_debug_static_bot_arm64',
      'Marshmallow Tablet Tester': 'android_gn_debug_static_bot',
      'Android Swarm Builder': 'swarming_android_gn_release_bot_minimal_symbols',
    },
    'chromium.chrome': {
      'Google Chrome Win': 'gyp_official_goma_minimal_symbols_x86',
      'Google Chrome Linux': 'gyp_official_goma_x86',
      'Google Chrome Linux x64': 'gn_official_goma',
      'Google Chrome Mac': 'gyp_official_goma',
      'Google Chrome ChromeOS': 'gyp_official_goma_chromeos',
    },
    'chromium.chromiumos': {
      'Linux ChromiumOS GN': 'chromeos_ozone_gn_release_bot',
      'Linux ChromiumOS GN (dbg)': 'chromeos_gn_debug_bot',
    },
    'chromium.linux': {
      'Linux Builder': 'swarming_gn_release_bot',
      'Linux Tests': 'none',
      'Linux Builder (dbg)(32)': 'swarming_gyp_debug_bot_no_symbols_x86',
      'Linux Tests (dbg)(1)(32)': 'none',
      'Linux Builder (dbg)': 'swarming_gn_debug_bot',
      'Linux Tests (dbg)(1)': 'none',
      'Linux GN': 'gn_release_bot',
      'Linux GN Clobber': 'gn_release_bot',
      'Linux GN (dbg)': 'gn_debug_bot',
      'Cast Linux': 'cast_gn_release_bot',
      'Android Arm64 Builder (dbg)': 'android_gyp_debug_static_bot_arm64',
      'Android Builder (dbg)': 'android_gyp_debug_static_bot',
      'Android Tests (dbg)': 'android_gyp_debug_static_bot',
      'Android Builder': 'android_gyp_release_bot',
      'Android Tests': 'android_gyp_release_bot',
      'Android Clang Builder (dbg)': 'android_clang_asan_gyp_debug_bot',
      'Android GN': 'android_gn_release_bot',
      'Android GN (dbg)': 'android_gn_debug_bot',
      'Cast Android (dbg)': 'android_cast_gyp_debug_static_bot',
    },
    'chromium.mac': {
      'Mac GN': 'gn_release_bot',
      'Mac GN (dbg)': 'gn_debug_static_bot',
    },
    'chromium.mojo': {
      'Chromium Mojo Android': 'android_gn_release_bot',
      'Chromium Mojo Windows': 'gn_release_bot_minimal_symbols_x86',
      'Chromium Mojo Linux': 'gn_release_bot',
    },
    'chromium.perf': {
      'Android Builder': 'gn_official_goma_minimal_symbols_android',
      'Android arm64 Builder': 'gn_official_goma_minimal_symbols_android_arm64',
      'Win Builder': 'gyp_official_goma_minimal_symbols_x86',
      'Win x64 Builder': 'gyp_official_goma_minimal_symbols_x64',
      'Mac Builder': 'gyp_official_goma',
      'Linux Builder': 'gn_official_goma',
    },
    'chromium.win': {
      # Windows bots take too long to link w/ full symbols and time out.
      'Win x64 GN': 'gn_release_bot_minimal_symbols',
      'Win x64 GN (dbg)': 'gn_debug_bot_minimal_symbols',
      'Win8 Aura': 'gn_release_bot_minimal_symbols_x86',
      'Win8 GN': 'gn_release_bot_minimal_symbols_x86',
      'Win8 GN (dbg)': 'gn_debug_bot_minimal_symbols_x86',
    },
    'chromium.webkit': {
      'WebKit Win Builder': 'swarming_gyp_release_bot_minimal_symbols_x86',
      'WebKit Win7': 'none',
      'WebKit Win10': 'none',
      'WebKit Win x64 Builder': 'swarming_gyp_release_bot_minimal_symbols_x64',
      'WebKit Win non-Oilpan': 'swarming_gyp_non_oilpan_release_bot_minimal_symbols_x86',
      'WebKit Win Builder (dbg)': 'swarming_gyp_debug_bot_minimal_symbols_x86',
      'WebKit Win7 (dbg)': 'none',
      'WebKit Win non-Oilpan (dbg)': 'swarming_gyp_non_oilpan_debug_bot_minimal_symbols_x86',
      'WebKit Win x64 Builder (dbg)': 'swarming_gyp_debug_bot_minimal_symbols_x64',
      'WebKit Mac Builder': 'swarming_gyp_release_bot_x64',
      'WebKit Mac10.11 (retina)': 'swarming_gyp_release_bot_x64',
      'WebKit Mac10.10': 'none',
      'WebKit Mac10.11': 'none',
      'WebKit Mac non-Oilpan': 'swarming_gyp_non_oilpan_release_bot_x64',
      'WebKit Mac Builder (dbg)': 'swarming_gyp_debug_bot_x64',
      'WebKit Mac10.11 (dbg)': 'none',
      'WebKit Mac non-Oilpan (dbg)': 'swarming_gyp_non_oilpan_debug_bot_x64',
      'WebKit Linux': 'swarming_gn_release_bot_x64',
      'WebKit Linux Trusty': 'swarming_gn_release_bot_x64',
      'WebKit Linux non-Oilpan Builder': 'swarming_gn_non_oilpan_release_bot_x64',
      'WebKit Linux ASAN': 'swarming_gyp_asan_lsan_release_bot_x64',
      'WebKit Linux non-Oilpan ASAN': 'swarming_gyp_non_oilpan_asan_lsan_release_bot_x64',
      'WebKit Linux MSAN': 'swarming_gyp_msan_release_bot_x64',
      'WebKit Linux Leak': 'swarming_gn_release_bot_x64',
      'WebKit Linux non-Oilpan Leak': 'swarming_gn_non_oilpan_release_bot_x64',
      'WebKit Linux (dbg)': 'swarming_gn_debug_bot_x64',
      'WebKit Linux non-Oilpan (dbg)': 'swarming_gn_non_oilpan_debug_bot_x64',
      'Android Builder': 'gyp_release_bot_android',
      'WebKit Android (Nexus4)': 'gyp_release_bot_android',
    },
    'chromium.memory.fyi': {
      'Chromium Linux Builder (valgrind)': 'gyp_valgrind_release_bot',
      'Linux Tests (valgrind)(1)': 'none',
      'Linux Tests (valgrind)(2)': 'none',
      'Linux Tests (valgrind)(3)': 'none',
      'Linux Tests (valgrind)(4)': 'none',
      'Linux Tests (valgrind)(5)': 'none',
      'Chromium Mac Builder (valgrind)': 'gyp_valgrind_debug_bot',
      'Chromium Mac (valgrind)(1)': 'none',
      'Chromium Mac (valgrind)(2)': 'none',
      'Chromium OS Builder (valgrind)': 'gyp_valgrind_chromeos_release_bot',
      'Chromium OS (valgrind)(1)': 'none',
      'Chromium OS (valgrind)(2)': 'none',
      'Chromium OS (valgrind)(3)': 'none',
      'Chromium OS (valgrind)(4)': 'none',
      'Chromium OS (valgrind)(5)': 'none',
      'Chromium OS (valgrind)(6)': 'none',
      'Chromium Windows Builder (DrMemory)': 'gyp_drmemory_shared_release_x86',
      'Windows Unit (DrMemory)': 'none',
      'Windows Content Browser (DrMemory)': 'none',
      'Windows Unit (DrMemory full) (1)': 'none',
      'Windows Unit (DrMemory full) (2)': 'none',
      'Windows Unit (DrMemory full) (3)': 'none',
      'Windows Unit (DrMemory full) (4)': 'none',
      'Windows Unit (DrMemory full) (5)': 'none',
      'Windows Content Browser (DrMemory full) (1)': 'none',
      'Windows Content Browser (DrMemory full) (2)': 'none',
      'Windows Content Browser (DrMemory full) (3)': 'none',
      'Windows Content Browser (DrMemory full) (4)': 'none',
      'Windows Content Browser (DrMemory full) (5)': 'none',
      'Windows Content Browser (DrMemory full) (6)': 'none',
      'Windows Browser (DrMemory full) (1)': 'none',
      'Windows Browser (DrMemory full) (2)': 'none',
      'Windows Browser (DrMemory full) (3)': 'none',
      'Windows Browser (DrMemory full) (4)': 'none',
      'Windows Browser (DrMemory full) (5)': 'none',
      'Windows Browser (DrMemory full) (6)': 'none',
      'Windows Browser (DrMemory full) (7)': 'none',
      'Windows Browser (DrMemory full) (8)': 'none',
      'Windows Browser (DrMemory full) (9)': 'none',
      'Windows Browser (DrMemory full) (10)': 'none',
      'Windows Browser (DrMemory full) (11)': 'none',
      'Windows Browser (DrMemory full) (12)': 'none',
      'Chromium Windows Builder (DrMemory x64)': 'gyp_drmemory_shared_release_x64',
      'Windows Unit (DrMemory x64)': 'none',
    },
    'chromium.fyi': {
      'CFI Linux': 'gn_cfi_release_bot',
      'CFI Linux ToT': 'gn_cfi_release_bot',
      'CFI Linux CF': 'gn_cfi_diag_release_bot',
      'CrWinClang64(dbg)': 'win_clang_debug_bot',
      'Win LKGR (DrM)': 'gn_release_drmemory_drfuzz_x86',
      'Win LKGR (DrM 64)': 'gn_release_drmemory_drfuzz',
      'Libfuzzer Upload Linux ASan': 'gn_release_libfuzzer_asan',
      'Libfuzzer Upload Linux MSan': 'gn_release_libfuzzer_msan',
      'Site Isolation Linux': 'gn_release_trybot',
      'Site Isolation Win': 'gyp_release_trybot_x64',
      'Linux ARM': 'swarming_gyp_release_bot_arm',
    },
    'chromium.gpu': {
      'GPU Linux Builder': 'swarming_gpu_tests_gn_release_bot',
      'GPU Linux Builder (dbg)': 'swarming_gpu_tests_gn_debug_bot',
      'Linux Release (NVIDIA)': 'none',
      'Linux Debug (NVIDIA)': 'none',
    },
    'chromium.gpu.fyi': {
      'GPU Linux Builder': 'swarming_gpu_fyi_tests_gn_release_bot',
      'GPU Linux Builder (dbg)': 'swarming_gpu_fyi_tests_gn_debug_bot',
      'Linux Release (NVIDIA)': 'none',
      'Linux Debug (NVIDIA)': 'none',
      'Linux Release (Intel)': 'none',
      'Linux Release (Intel Graphics Stack)': 'none',
      'Linux Release (ATI)': 'none',
      'Linux Debug (NVIDIA)': 'none',
      'Linux Release dEQP (NVIDIA)': 'none',
    },
    'chromium.webrtc.fyi': {
      'Android GN': 'android_gn_release_bot_chrome_with_codecs',
      'Android GN (dbg)': 'android_gn_debug_bot_chrome_with_codecs',
      'Linux Builder': 'gn_release_bot_chrome_with_codecs',
      'Mac GN': 'gn_release_bot_chrome_with_codecs',
      'Mac GN (dbg)': 'gn_debug_static_bot_chrome_with_codecs',
      'Win x64 GN': 'gn_release_bot_minimal_symbols_chrome_with_codecs',
      'Win x64 GN (dbg)': 'gn_debug_bot_minimal_symbols_chrome_with_codecs',
    },
    'client.skia': {
      'Linux Builder': 'swarming_gn_release_bot',
      'Linux Builder-Trybot': 'swarming_gn_release_bot',
      'Linux Tests': 'swarming_gn_release_bot',
    },
    'client.v8.fyi': {
      'Linux Debug Builder': 'gn_debug_bot',
      'V8 Linux GN': 'gn_release_bot',
      'V8 Android GN (dbg)': 'android_gn_debug_bot',
    },
    'official.desktop': {
      'precise64': 'gn_official',
      'blimp-engine': 'gn_blimp_debug',
    },
    'official.desktop.continuous': {
      'precise64 trunk': 'gn_official',
      'precise64 beta': 'gn_official',
      'precise64 stable': 'gn_official',
    },
    'tryserver.blink': {
      'linux_blink_dbg': 'swarming_gn_debug_bot_minimal_symbols_x64',
      'linux_blink_compile_dbg': 'swarming_gn_debug_bot_minimal_symbols_x64',
      'linux_blink_compile_rel': 'swarming_gn_release_trybot_minimal_symbols_x64',
      'linux_blink_rel': 'swarming_gn_release_trybot_minimal_symbols_x64',
      'mac_blink_dbg': 'swarming_gyp_debug_bot_minimal_symbols_x64',
      'mac_blink_compile_dbg': 'swarming_gyp_debug_bot_minimal_symbols_x64',
      'mac_blink_compile_rel': 'swarming_gyp_release_bot_minimal_symbols_x64',
      'mac_blink_rel': 'swarming_gyp_release_trybot_minimal_symbols_x64',
      'win_blink_dbg': 'swarming_gyp_debug_bot_minimal_symbols_x86',
      'win_blink_compile_dbg': 'swarming_gyp_debug_bot_minimal_symbols_x86',
      'win_blink_compile_rel': 'swarming_gyp_release_trybot_minimal_symbols_x86',
      'win_blink_rel': 'swarming_gyp_release_trybot_minimal_symbols_x86',
      'linux_blink_oilpan_dbg': 'swarming_gn_non_oilpan_debug_bot_minimal_symbols_x64',
      'linux_blink_oilpan_rel': 'swarming_gn_non_oilpan_release_trybot_minimal_symbols_x64',
      'linux_blink_oilpan_compile_rel': 'swarming_gn_non_oilpan_release_trybot_minimal_symbols_x64',
      'mac_blink_oilpan_dbg': 'swarming_gyp_non_oilpan_debug_bot_minimal_symbols_x64',
      'mac_blink_oilpan_rel': 'swarming_gyp_non_oilpan_release_trybot_minimal_symbols_x64',
      'mac_blink_oilpan_compile_rel': 'swarming_gyp_non_oilpan_release_trybot_minimal_symbols_x64',
      'win_blink_oilpan_dbg': 'swarming_gyp_non_oilpan_debug_bot_minimal_symbols_x86',
      'win_blink_oilpan_rel': 'swarming_gyp_non_oilpan_release_trybot_minimal_symbols_x86',
      'win_blink_oilpan_compile_rel': 'swarming_gyp_non_oilpan_release_trybot_minimal_symbols_x86',
      'linux_blink_rel_ng': 'swarming_gn_release_trybot_minimal_symbols_x64',
      'blink_presubmit': 'none',
    },
    'tryserver.chromium.android': {
      'android_chromium_gn_compile_dbg': 'android_gn_debug_bot',
      'android_chromium_gn_compile_rel': 'android_gn_release_trybot',
      'android_chromium_gn_rel': 'android_gn_release_trybot',
    },
    'tryserver.chromium.angle': {
      'linux_angle_rel_ng': 'swarming_gpu_fyi_tests_gn_release_trybot',
      'linux_angle_dbg_ng': 'swarming_gpu_fyi_tests_gn_debug_trybot',
    },
    'tryserver.chromium.linux': {
      'linux_chromium_asan_rel_ng': 'swarming_asan_lsan_gyp_release_trybot',
      'linux_full_bisect_builder': 'swarming_gyp_release_bot',
      'linux_site_isolation': 'gn_release_trybot',
      'linux_valgrind': 'gyp_valgrind_release_bot',
      'linux_chromium_compile_rel_ng': 'swarming_gn_release_trybot',
      'linux_chromium_rel_ng': 'swarming_gpu_tests_gn_release_trybot',
      'linux_chromium_cfi_rel_ng': 'gn_cfi_release_trybot',
      'linux_chromium_gn_rel': 'gn_release_trybot',
      'linux_chromium_gn_chromeos_rel': 'chromeos_ozone_gn_release_trybot',
      'linux_blink_oilpan_rel': 'swarming_gn_non_oilpan_release_trybot_minimal_symbols_x64',
      'linux_chromium_compile_dbg_ng': 'swarming_gn_debug_trybot',
      'linux_chromium_dbg_ng': 'swarming_gn_debug_trybot',
      'linux_chromium_trusty_dbg': 'gyp_debug_bot',
      'linux_chromium_trusty32_dbg': 'gyp_debug_bot_x86',
      'linux_chromium_gn_dbg': 'gn_debug_bot',
      'linux_chromium_gn_chromeos_dbg': 'chromeos_gn_debug_bot',
      'linux_chromium_msan_rel_ng': 'swarming_msan_gyp_release_trybot',
      'linux_chromium_tsan_rel_ng': 'swarming_tsan_gyp_release_trybot',
      'linux_chromium_practice_rel_ng': 'gyp_release_trybot',
      'linux_arm': 'swarming_gyp_release_trybot_arm',
      'linux_chromium_compile_dbg_32_ng': 'swarming_gyp_debug_trybot_x86',
      'linux_chromium_dbg_32_ng': 'swarming_gyp_debug_trybot_x86',
      'linux_chromium_archive_rel_ng': 'noswarming_gn_release_bot',
      'linux_chromium_clobber_rel_ng': 'gn_release_trybot',
      'linux_chromium_gn_upload': 'gn_linux_upload',
      'linux_chromium_clang_upload': 'gn_release_bot',
      'cast_shell_linux': 'cast_gn_release_trybot',
      'linux_deterministic': 'swarming_deterministic_gyp_release_bot',
      'linux_ecs_ozone': 'embedded_gyp_debug_bot',
      'linux_optional_gpu_tests_rel': 'swarming_gpu_fyi_tests_gn_release_trybot',
    },
    'tryserver.chromium.mac': {
      'mac_chromium_gn_dbg': 'gn_debug_static_bot',
      'mac_chromium_gn_rel': 'gn_release_trybot',
      'mac_chromium_gn_upload': 'gn_release_bot',
      'mac_chromium_clang_upload': 'gn_release_bot',
    },
    'tryserver.chromium.perf': {
      'android_perf_bisect_builder': 'gyp_official_goma_minimal_symbols_android',
      'android_arm64_perf_bisect_builder': 'gyp_official_goma_minimal_symbols_android_arm64',
      'linux_perf_bisect_builder': 'gn_official_goma',
      'mac_perf_bisect_builder': 'gyp_official_goma',
      'win_perf_bisect_builder': 'gyp_official_goma_minimal_symbols_x86',
      'winx64_bisect_builder': 'gyp_official_goma_minimal_symbols_x64',
      'linux_perf_bisect': 'gn_official_goma',
      'mac_10_11_perf_bisect': 'gyp_official_goma',
      'mac_10_10_perf_bisect': 'gyp_official_goma',
      'mac_retina_perf_bisect': 'gyp_official_goma',
      'mac_hdd_perf_bisect': 'gyp_official_goma',
      'win_perf_bisect': 'gyp_official_goma_minimal_symbols_x86',
      'win_x64_perf_bisect': 'gyp_official_goma_minimal_symbols_x64',
      'winx64ati_perf_bisect': 'gyp_official_goma_minimal_symbols_x64',
      'winx64nvidia_perf_bisect': 'gyp_official_goma_minimal_symbols_x64',
      'winx64intel_perf_bisect': 'gyp_official_goma_minimal_symbols_x64',
      'winx64_10_perf_bisect': 'gyp_official_goma_minimal_symbols_x64',
      'winx64_zen_perf_bisect': 'gyp_official_goma_minimal_symbols_x64',
      'win_8_perf_bisect': 'gyp_official_goma_minimal_symbols_x86',
      'android_one_perf_bisect': 'gyp_official_goma_minimal_symbols_android',
      'android_nexus5_perf_bisect': 'gyp_official_goma_minimal_symbols_android',
      'android_nexus6_perf_bisect': 'gyp_official_goma_minimal_symbols_android',
      'android_nexus7_perf_bisect': 'gyp_official_goma_minimal_symbols_android',
      'android_nexus9_perf_bisect': 'gyp_official_goma_minimal_symbols_android_arm64',
      'android_s5_perf_bisect': 'gyp_official_goma_minimal_symbols_android',
      'android_s5_perf_cq': 'gyp_official_goma_minimal_symbols_android',
      'linux_perf_cq': 'gn_official_goma',
      'mac_retina_perf_cq': 'gyp_official_goma',
      'winx64_10_perf_cq': 'gyp_official_goma_minimal_symbols_x64',
      'linux_fyi_perf_bisect': 'gn_official_goma',
      'mac_fyi_perf_bisect': 'gyp_official_goma',
      'win_fyi_perf_bisect': 'gyp_official_goma_minimal_symbols_x86',
    },
    'tryserver.chromium.win': {
      'win_chromium_gn_x64_dbg': 'gn_debug_bot_minimal_symbols',
      'win_chromium_gn_x64_rel': 'gn_release_trybot',
      'win_chromium_x64_rel_ng': 'gn_release_trybot',
      'win8_chromium_ng': 'gn_release_trybot_x86',
      'win8_chromium_gn_dbg': 'gn_debug_bot_minimal_symbols_x86',
      'win8_chromium_gn_rel': 'gn_release_trybot_x86',
      'win8_chromium_gn_upload': 'gn_release_bot_minimal_symbols_x86',
      'win_chromium_clang_upload': 'gn_release_bot',
      'win_clang_x64_dbg': 'win_clang_debug_bot',
    },
    'tryserver.v8': {
      'v8_linux_chromium_gn_rel': 'gn_release_trybot',
      'v8_android_chromium_gn_dbg': 'android_gn_debug_bot',
      'v8_linux_blink_rel': 'swarming_gn_release_trybot_minimal_symbols_x64',
    },
  },
}
