# Copyright 2015 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/compiler/compiler.gni")

if (is_win) {
  action("copy_cdb_to_output") {
    script = "//build/win/copy_cdb_to_output.py"
    inputs = [
      script,
    ]
    outputs = [
      "$root_out_dir/cdb/cdb.exe",
      "$root_out_dir/cdb/dbgeng.dll",
      "$root_out_dir/cdb/dbghelp.dll",
      "$root_out_dir/cdb/dbgmodel.dll",
    ]
    args = [
      rebase_path("$root_out_dir/cdb", root_out_dir),
      target_cpu,
    ]
  }
}

group("telemetry_chrome_test") {
  testonly = true

  if (is_android) {
    data_deps = [
      "//content/shell:content_shell",
    ]
  } else {
    data_deps = [
      "//third_party/catapult/telemetry:bitmaptools",
    ]

    if (!is_mac) {
      # TODO(kbr): this used to be "//chrome". Had to change this to
      # chrome_initial temporarily to work around crbug.com/536192.
      data_deps += [ "//chrome:chrome_initial" ]
    } else {
      data_deps += [ "//chrome" ]
    }
  }

  data = [
    "//tools/perf/chrome_telemetry_build/",
    "//third_party/catapult/",
  ]

  if (is_win) {
    data_deps += [ "//chrome:reorder_imports" ]
    data += [ "//components/crash/content/tools/generate_breakpad_symbols.py" ]
  }

  if (is_linux) {
    data_deps += [
      "//tools/xdisplaycheck",
      "//breakpad:dump_syms($host_toolchain)",
    ]
    data += [ "//components/crash/content/tools/generate_breakpad_symbols.py" ]
  }

  if (is_win && (symbol_level == 1 || symbol_level == 2)) {
    data_deps += [
      ":copy_cdb_to_output",
      "//third_party/crashpad/crashpad/tools:crashpad_database_util",
    ]

    # TODO(GYP): These should be provided automatically through data_deps.
    data += [ "$root_out_dir/chrome.exe.pdb" ]
    if (is_component_build) {
      data += [
        "$root_out_dir/base.dll.pdb",
        "$root_out_dir/blink_platform.dll.pdb",
        "$root_out_dir/blink_web.dll.pdb",
        "$root_out_dir/content.dll.pdb",
      ]
    } else {
      data += [ "$root_out_dir/chrome_child.dll.pdb" ]
    }
  }
}
