// Copyright 2015 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module mus.mojom;

import "components/mus/public/interfaces/window_manager_constants.mojom";
import "components/mus/public/interfaces/window_tree.mojom";
import "ui/mojo/geometry/geometry.mojom";

struct WindowManagerConfig {
  array<Display> displays;
  mojo.Insets normal_client_area_insets;
  mojo.Insets maximized_client_area_insets;
  // Max width needed to display the buttons on the title bar. The buttons are
  // aligned to the trailing edge of the titlebar.
  // TODO(sky): this API is very narrow, and assumes a particular config.
  uint32 max_title_bar_button_width;
};

// Represents a core interface that should be implemented by any window manager
// built on top of Mus.
interface WindowManager {
  // The window's preferred size as defined by its content. Type: gfx::Size.
  const string kPreferredSize_Property = "prop:preferred-size";
  // The window's resize behavior. Type: ResizeBehavior.
  const string kResizeBehavior_Property = "prop:resize-behavior";
  // Bounds the window is restored to. Type: gfx::Rect.
  const string kRestoreBounds_Property = "prop:restore-bounds";
  // Shadow style for the window. Type: mojom::ShadowStyle.
  const string kShadowStyle_Property = "prop:shadow-style";
  // The window's show state. Type: ShowState.
  const string kShowState_Property = "prop:show-state";
  // The window bounds as set by user input. Type: gfx::Rect.
  const string kUserSetBounds_Property = "prop:user-set-bounds";
  const string kWindowType_Property = "prop:window-type";
  // The window's title. Type: mojom::String
  const string kWindowTitle_Property = "prop:window-title";

  OpenWindow(WindowTreeClient client, map<string, array<uint8>> properties);

  GetConfig() => (WindowManagerConfig config);
};
