// Copyright (c) 2017 Vivaldi Technologies AS. All rights reserved
[
  {
    "namespace": "calendar",
    "description": "Use the <code>vivaldi.calendar</code> API to manipulate calendar events.",
    "types": [
      {
        "id": "OccurrenceInterval",
        "type": "string",
        "enum": [ "", "days", "weeks", "months", "years" ],
        "description": "Interval (none (empty string),days, weeks, months) when next event should reoccur."
      },
      {
        "id": "RecurrencePattern",
        "type": "object",
        "description": "A pattern describing how a event should reoccur",
        "properties": {
          "interval": {
            "$ref": "OccurrenceInterval",
            "optional": true,
            "description": "Interval (days, weeks, months, year) when next event should reoccur."
          },
          "number_of_occurrences": {
            "type": "integer",
            "optional": true,
            "description": "How often the event shoud reoccur."
          },
          "skip_count": {
            "type": "integer",
            "optional": true,
            "description": "How many (days, week, months) see interval, should be skipped until next event occurs."
          },
          "day_of_week": {
            "type": "integer",
            "optional": true,
            "description": "Which day of the week the event takes place. Number 1,2,3,4,5,6,7 starting on monday"
          },
          "week_of_month": {
            "type": "integer",
            "optional": true,
            "description": "Which week of the month the event takes place. 1,2,3,4. Negative numbers from end of month"
          },
          "day_of_month": {
            "type": "integer",
            "optional": true,
            "description": "Which day of the month the event takes place. 1,2,3,..30. Negative numbers from end of month"
          },
          "month_of_year": {
            "type": "integer",
            "optional": true,
            "description": "Which month of the year event takes place. 1,2,3,..12. Negative numbers from end of year"
          }
        }
      },
      {
        "id": "CalendarEvent",
        "type": "object",
        "description": "A calendar event. An event belongs to a single Calendar",
        "properties": {
          "id": {
            "type": "string",
            "minimum": 0,
            "description": "The unique identifier for the event. IDs are unique within the current profile, and they remain valid even after the browser is restarted."
          },
          "calendarId": {
            "type": "string",
            "optional": true,
            "description": "The calendar id of the event."
          },
          "alarmId": {
            "type": "string",
            "optional": true,
            "description": "The alarm id of the event."
          },
          "title": {
            "type": "string",
            "optional": true,
            "description": "Title of event."
          },
          "description": {
            "type": "string",
            "optional": true,
            "description": "The event description."
          },
          "start": {
            "type": "number",
            "optional": true,
            "description": "When this event starts, in milliseconds since the epoch."
          },
          "end": {
            "type": "number",
            "optional": true,
            "description": "When this event ends, in milliseconds since the epoch."
          },
          "dateAdded": {
            "type": "number",
            "optional": true,
            "description": "When this event was created, in milliseconds since the epoch."
          },
          "allDay": {
            "type": "boolean",
            "optional": true,
            "description": "All day event."
          },
          "is_recurring": {
            "description": "Is this a recurring event",
            "type": "boolean",
            "optional": true
          },
          "start_recurring": {
            "description": "When this event recurrence starts, in milliseconds since the epoch",
            "type": "number",
            "optional": true
          },
          "end_recurring": {
            "description": "When this event should stop recurring, in milliseconds since the epoch",
            "type": "number",
            "optional": true
          },
          "location": {
            "type": "string",
            "optional": true,
            "description": "The location of the event."
          },
          "url": {
            "description": "The url of the event",
            "type": "string",
            "optional": true
          },
          "recurrence": {
            "$ref": "RecurrencePattern",
            "optional": true,
            "description": "How this event reoccurs."
          }
        }
      },
      {
        "id": "CreateDetails",
        "description": "Object passed to the create() function.",
        "inline_doc": true,
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "optional": false
          },
          "description": {
            "type": "string",
            "optional": true
          },
          "start": {
            "type": "number",
            "optional": true,
            "description": "When this event shoud starts, in milliseconds since the epoch."
          },
          "end": {
            "type": "number",
            "optional": true,
            "description": "When this event should ends, in milliseconds since the epoch."
          },
          "allDay": {
            "type": "boolean",
            "optional": true,
            "description": "Is this a all day event."
          },
          "is_recurring": {
            "description": "Is this a recurring event",
            "type": "boolean",
            "optional": true
          },
          "start_recurring": {
            "description": "When this event recurrence starts, in milliseconds since the epoch",
            "type": "number",
            "optional": true
          },
          "end_recurring": {
            "description": "When this event should stop recurring, in milliseconds since the epoch",
            "type": "number",
            "optional": true
          },
          "location": {
            "type": "string",
            "optional": true,
            "description": "The location of the event."
          },
          "url": {
            "description": "The url of the event",
            "type": "string",
            "optional": true
          },
          "recurrence": {
            "$ref": "RecurrencePattern",
            "optional": true,
            "description": "How this event reoccurs."
          }
        }
      },
      {
        "id": "CreateEventsResults",
        "type": "object",
        "description": "Object stating how many events were created successfully and how many creations resulted in errors",
        "properties": {
          "created_count": {
            "description": "Number of events created",
            "type": "integer",
            "optional": true
          },
          "failed_count": {
            "description": "Number of failed event creation attempts",
            "type": "integer",
            "optional": true
          }
        }
      },
      {
        "id": "CreateCalendarDetails",
        "description": "Object passed to the createCalendar() function.",
        "inline_doc": true,
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "optional": false,
            "description": "The name of the calendar to be created."
          },
          "description": {
            "type": "string",
            "optional": true,
            "description": "The description of the calendar to be created."
          },
          "url": {
            "type": "string",
            "optional": true,
            "description": "The URL of a remote calendar."
          },
          "orderindex": {
            "type": "integer",
            "optional": true,
            "description": "The UI order of the calendar."
          },
          "color": {
            "type": "string",
            "optional": true,
            "description": "The color of the calendar."
          }
        }
      },
      {
        "id": "Calendar",
        "type": "object",
        "description": "Calendar that owns events",
        "properties": {
          "id": {
            "type": "string",
            "minimum": 0,
            "description": "The unique identifier for the calendar. IDs are unique within the current profile, and they remain valid even after the browser is restarted."
          },
          "name": {
            "type": "string",
            "optional": true,
            "description": "The name of the calendar."
          },
          "description": {
            "type": "string",
            "optional": true,
            "description": "The calendar description."
          },
          "url": {
            "type": "string",
            "optional": true,
            "description": "The URL of a remote calendar."
          },
          "orderindex": {
            "type": "integer",
            "optional": true,
            "description": "The UI order of the calendar."
          },
          "color": {
            "type": "string",
            "optional": true,
            "description": "The UI color of the calendar."
          },
          "hidden": {
            "type": "boolean",
            "optional": true,
            "description": "States if the calendar is hidden in the UI"
          }
        }
      }
    ],
    "functions": [
      {
        "name": "getAllEvents",
        "type": "function",
        "description": "Retrieves all events in calendar",
        "parameters": [
          {
            "type": "function",
            "name": "callback",
            "parameters": [
              {
                "name": "results",
                "type": "array",
                "items": {
                  "$ref": "CalendarEvent"
                }
              }
            ]
          }
        ]
      },
      {
        "name": "eventCreate",
        "type": "function",
        "description": "Creates a event in the specified calendar.",
        "parameters": [
          {
            "$ref": "CreateDetails",
            "name": "event"
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
            "parameters": [
              {
                "name": "result",
                "$ref": "CalendarEvent"
                }
              ]
            }
          ]
        },
        {
          "name": "eventsCreate",
          "type": "function",
          "description": "Creates multiple events.",
          "parameters": [
            {
              "name": "eventsList",
              "type": "array",
              "items": {
                "$ref": "CreateDetails"
              },
              "minItems": 1
            },
            {
              "type": "function",
              "name": "callback",
              "optional": true,
              "parameters": [
                {
                  "name": "result",
                  "description": "Object stating how many creation attempt succeeded and how many failed",
                  "$ref": "CreateEventsResults"
              }
            ]
          }
        ]
      },
      {
        "name": "deleteEvent",
        "type": "function",
        "description": "Deletes an event.",
        "parameters": [
          {
            "type": "string",
            "name": "id"
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
            "parameters": [
              {
                "name": "result",
                "type": "boolean"
              }
            ]
          }
        ]
      },
      {
        "name": "updateEvent",
        "type": "function",
        "description": "Updates the properties of an event. Specify only the properties that you want to change. Unspecified properties will be left unchanged.",
        "parameters": [
          {
            "type": "string",
            "name": "id"
          },
          {
            "type": "object",
            "name": "changes",
            "properties": {
              "calendar_id": {
                "description": "The updated calendar id of event",
                "type": "string",
                "optional": true
              },
              "alarm_id": {
                "description": "The updated alarm id of event",
                "type": "string",
                "optional": true
              },
              "title": {
                "description": "The updated title of event",
                "type": "string",
                "optional": true
              },
              "description": {
                "description": "The updated description of event",
                "type": "string",
                "optional": true
              },
              "start": {
                "description": "When this event shoud starts, in milliseconds since the epoch",
                "type": "number",
                "optional": true
              },
              "end": {
                "description": "Updated time when this event should end, in milliseconds since the epoch",
                "type": "number",
                "optional": true
              },
              "allDay": {
                "description": "Is this all day event",
                "type": "boolean",
                "optional": true
              },
              "location": {
                "description": "The location of the event",
                "type": "string",
                "optional": true
              },
              "is_recurring": {
                "description": "Is this a recurring event",
                "type": "boolean",
                "optional": true
              },
              "start_recurring": {
                "description": "When this event recurrence starts, in milliseconds since the epoch",
                "type": "number",
                "optional": true
              },
              "end_recurring": {
                "description": "When this event should stop recurring, in milliseconds since the epoch",
                "type": "number",
                "optional": true
              },
              "url": {
                "description": "The url of the event",
                "type": "string",
                "optional": true
              },
              "recurrence": {
                "$ref": "RecurrencePattern",
                "optional": true,
                "description": "How this event reoccurs."
              }
            }
          }
        ]
      },
      {
        "name": "create",
        "type": "function",
        "description": "Creates a calendar.",
        "parameters": [
          {
            "$ref": "CreateCalendarDetails",
            "name": "calendar"
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
            "parameters": [
              {
                "name": "result",
                "$ref": "Calendar"
              }
            ]
          }
        ]
      },
      {
        "name": "getAll",
        "type": "function",
        "description": "Returns all calendars",
        "parameters": [
          {
            "type": "function",
            "name": "callback",
            "parameters": [
              {
                "name": "results",
                "type": "array",
                "items": {
                  "$ref": "Calendar"
                }
              }
            ]
          }
        ]
      },
      {
        "name": "delete",
        "type": "function",
        "description": "Deletes an calendar.",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "description":  "The id of the calendar to be deleted"
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
            "parameters": [
              {
                "name": "result",
                "type": "boolean"
              }
            ]
          }
        ]
      },
      {
        "name": "update",
        "type": "function",
        "description": "Updates the properties of an calendar. Specify only the properties that you want to change. Unspecified properties will be left unchanged.",
        "parameters": [
          {
            "type": "string",
            "name": "id"
          },
          {
            "type": "object",
            "name": "changes",
            "properties": {
              "name": {
                "description": "The updated name of the calendar",
                "type": "string",
                "optional": true
              },
              "description": {
                "description": "The updated description of the calendar",
                "type": "string",
                "optional": true
              },
              "url": {
                "description": "The updated URL of the calendar",
                "type": "string",
                "optional": true
              },
              "orderindex": {
                "description": "The UI order of the calendar",
                "type": "number",
                "optional": true
              },
              "color": {
                "description": "The UI color of the calendar",
                "type": "string",
                "optional": true
              },
              "hidden": {
                "type": "boolean",
                "optional": true,
                "description": "States if the calendar is hidden in the UI"
              }
            }
          }
        ]
      }
    ],
    "events": [
      {
        "name": "onEventCreated",
        "type": "function",
        "description": "Fired when a event is created.",
        "parameters": [
          {
            "name": "createdEvent",
            "$ref": "CalendarEvent",
            "description": "The created event"
          }
        ]
      },
      {
        "name": "onEventRemoved",
        "type": "function",
        "description": "Fired when event is deleted.",
        "parameters": [
          {
            "name": "removedEvent",
            "$ref": "CalendarEvent",
            "description": "The deleted event"
          }
        ]
      },
      {
        "name": "onEventChanged",
        "type": "function",
        "description": "Fired when event is updated.",
        "parameters": [
          {
            "name": "changedEvent",
            "$ref": "CalendarEvent",
            "description": "The changed event"
          }
        ]
      }
    ]
  }
]
