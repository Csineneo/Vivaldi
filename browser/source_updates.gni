
update_template_instance("//chrome/browser:browser") {
  sources += [
    "//vivaldi/browser/menus/vivaldi_menu_enums.h",
    "//vivaldi/browser/shell_integration/vivaldi_shell_integration.h",
    "//vivaldi/browser/shell_integration/vivaldi_shell_integration_linux.cc",
    "//vivaldi/browser/shell_integration/vivaldi_shell_integration_mac.mm",
    "//vivaldi/browser/shell_integration/vivaldi_shell_integration_win.cc",
  ]
  if (is_mac) {
    sources += [
      "//vivaldi/browser/mac/sparkle_util.h",
      "//vivaldi/browser/mac/sparkle_util.mm",
    ]
  }
  if (!is_android) {
    sources += [
      "//vivaldi/browser/menus/vivaldi_menus.cpp",
      "//vivaldi/browser/menus/vivaldi_menus.h",
    ]
  }
}

update_target("//chrome/browser/extensions:extensions") {
  sources += [
    "//vivaldi/browser/extensions/browser_extension_window_controller_viv.cc",
  ]
}

update_template_instance("//chrome/browser/ui:ui") {
  sources += [
    "//vivaldi/browser/launch_update_notifier.h",
    "//vivaldi/browser/launch_update_notifier_win.cc",
    "//vivaldi/browser/launch_update_notifier_posix.cc",
    "//vivaldi/browser/startup_vivaldi_browser.cpp",
    "//vivaldi/browser/startup_vivaldi_browser.h",
    "//vivaldi/browser/ui/viv_tab_contents_synced_tab_delegate.cc",
  ]
  if (!is_android) {
    sources += [
      "//vivaldi/browser/ui/viv_settings_import_data_handler.cc",
      "//vivaldi/browser/ui/viv_toolbar_actions_model.cc",
    ]
  }
  if (toolkit_views) {
    sources += [
      "//vivaldi/browser/ui/viv_page_info_bubble_view.cc",
    ]
  }
  if (use_aura) {
    sources += [
      "//vivaldi/browser/ui/viv_web_drag_bookmark_handler_aura.cc",
    ]
  }
}

update_target("//chrome/common:constants") {
  if (is_win) {
    sources += [
      "//vivaldi/browser/win/vivaldi_utils.cc",
      "//vivaldi/browser/win/vivaldi_utils.h",
    ]
  }
}
